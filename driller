#!/usr/bin/env bash -e

function usage() {
  cat <<EOF
USAGE:
  $(basename -- $0) [OPTION] <dir>

OPTIONS:
  --absolute                Provide the absolute path (default).
  --basename                Provide the filename from a path.
  --dirname                 Provide the dirname from a path.
  --scm-root                Find the scm root (git or hg).
  --help                    This help.

EOF
  exit 0
}

function __strip_extraneous_slashes() {
  read <<< $@
  cat /dev/stdin | sed -E 's#/+#/#g'
}

function __qualify_dot_dot_slashes() {
  read <<< $@
  stdin=$(cat /dev/stdin)

  if [[ -d ${stdin} ]]; then
    dir=${stdin}
  else
    dir=$(dirname -- ${stdin})
    file=$(basename -- ${stdin})
  fi

  cd ${dir}
  echo $(pwd)/${file}
}

function __clean_path() {
  echo $1 | __qualify_dot_dot_slashes | __strip_extraneous_slashes
}

function __dirname() {
  if [[ -d $1 ]]; then
    __clean_path $1
  else
    __clean_path $(dirname -- $1)
  fi
}

function __filename() {
  [[ -e $1 ]] && [[ ! -d $1 ]] || fatal "Path isn't to a file"
  basename -- $(__clean_path $1)
}

function __scm_dir() {
  [[ -d "$1/.hg" || -d "$1/.git" ]] && return 0
}

function __scm_root() {
  dir=$(__dirname $1)
  until [[ ${dir} == "/" ]]; do
    __scm_dir ${dir} && __clean_path ${dir} && return 0
    dir="$(__clean_path ${dir}/../)"
  done

  fatal "SCM dir not found"
}

function fatal() {
  echo "Fatal: $1" > /dev/stderr
  exit 1
}

[[ -z $@ ]] && usage
PATH_ARGS=""
OPTION="--absolute"

for a in "$@"; do
  if [[ -e "$a" ]]; then
    PATH_ARGS="${PATH_ARGS} $a"
  elif [[ "$a" =~ ^--[a-z\-]+$ ]]; then
    OPTION=$a
  fi
done

for path in ${PATH_ARGS}; do
  case "${OPTION}" in
    "--absolute")
      __clean_path $path
      ;;
    "--basename")
      [[ ! -d $path ]] && __filename $path
      ;;
    "--debug")
      __debug $path
      ;;
    "--dirname")
      __dirname $path
      ;;
    "--scm"|"--scm-root")
      __scm_root $path
      ;;
  esac
done

case "${OPTION}" in
  "--help")
    usage
    ;;
esac
