#!/usr/bin/env bash -e

function usage() {
  /bin/cat <<EOF
USAGE:
  $(/usr/bin/basename $0) [OPTION] <dir>

OPTIONS:
  --absolute                Provide the absolute path.
  --git-root                Find the git root.
  --help                    This help.

EOF
  exit 0
}

function find_path_in_arguments() {
  for arg in "$@"; do
    if ! [[ ${arg} =~ ^- ]]; then
      path=${arg}
    fi
  done
  [[ -z ${path} ]] && path=$(pwd)
  if [[ ! -d ${path} ]] && [[ ! -f ${path} ]]; then
    echo "Error: Invalid path" > /dev/stderr
    exit 1
  fi
  echo ${path}
}

function __dirname() {
  if [[ -f $1 ]]; then
    dir=$(/usr/bin/dirname $1)
  else
    dir=$1
  fi

  cd ${dir}
  dir=$(pwd)
  if ! [[ ${dir} =~ /$ ]]; then
    dir="${dir}/"
  fi

  # compress // down to /
  echo ${dir} | /usr/bin/sed 's#//#/#g'
}

function __filename() {
  if [[ -f $1 ]]; then
    echo $(/usr/bin/basename $1)
  fi
}

function __root_dir() {
  [[ $(__dirname ${dir}) == "/" ]]
  return $?
}

function __git_dir() {
  [[ -d "${dir}/.git" ]]
  return $?
}

function git_root() {
  dir=$1
  while ! __root_dir ${dir} && ! __git_dir ${dir}; do
    dir=$(__dirname ${dir}/../)
  done

  if [[ ${dir} == "/" ]]; then
    echo "Error: Git dir not found" > /dev/stderr
    exit 1
  fi

  echo ${dir}
}

function debug() {
  echo "PATH_ARG:${PATH_ARG}"
  echo "DIR:${DIR}"
  echo "FILE:${FILE}"
  echo "PATH:${PATH}"
  exit 0
}

PATH_ARG=$(find_path_in_arguments $@)
DIR=$(__dirname ${PATH_ARG})
FILE=$(__filename ${PATH_ARG})
PATH="${DIR}${FILE}"

for arg in "$@"; do
  case "${arg}" in
    "--debug")                    debug                                     ;;
    "--help")                     usage                                     ;;
    "--absolute")                 echo ${PATH}                              ;;
    "--git-root")                 git_root ${PATH}                          ;;
  esac
done
