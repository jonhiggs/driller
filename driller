#!/usr/bin/env bash
set -e

function usage() {
  cat <<EOF
USAGE:
  $(basename $0) [OPTION] <dir>

OPTIONS:
  --absolute                Provide the absolute path.
  --basename                Provide the filename from a path.
  --dirname                 Provide the dirname from a path.
  --scm-root                Find the scm root (git or hg).
  --help                    This help.

EOF
  exit 0
}

function find_path_in_arguments() {
  for arg in "$@"; do
    if ! [[ ${arg} =~ ^- ]]; then
      [[ ! -z ${path} ]] && fatal "Only one path should be parsed in."
      path=${arg}
    fi
  done

  [[ -z ${path} ]] && path=$(pwd)
  [[ ! -e ${path} ]] && fatal "Invalid path"

  echo ${path}
}

function __strip_extraneous_slashes() {
  echo $1 | sed -E 's#/+#/#g'
}

function __qualify_dot_dot_slashes() {
  if [[ -d $1 ]]; then
    dir=$1
    file=""
  else
    dir=$(dirname $1)
    file=$(basename $1)
  fi

  cd ${dir}
  echo $(pwd)/${file}
}

function __add_trailing_slash() {
  if [[ -d $1 ]]; then
    echo $1 | sed -E 's#/?$#/#'   # a single trailing slash on directories.
  else
    echo $1 | sed -E 's#/?$##'    # no trailing slash on files.
  fi
}

function __clean_path() {
  path=$1
  path=$(__qualify_dot_dot_slashes ${path})
  path=$(__strip_extraneous_slashes ${path})
  path=$(__add_trailing_slash ${path})
  echo ${path}
}

function __dirname() {
  [[ -z $1 ]] && dir=${PATH_ARG} || dir=$1
  [[ ! -d ${dir} ]] && dir=$(dirname $dir)
  __clean_path ${dir}
}

function __filename() {
  [[ -d ${PATH_ARG} ]] && return 1
  echo $(basename ${PATH_ARG})
}

function __git_dir() {
  [[ -d "$1/.git" ]]
  return $?
}

function __hg_dir() {
  [[ -d "$1/.hg" ]]
  return $?
}

function __scm_dir() {
  __git_dir $1 || __hg_dir $1
  return $?
}

function scm_root() {
  dir=$1
  until [[ $(__clean_path ${dir}) == "/" ]]; do
    __scm_dir ${dir} && __clean_path ${dir} && return 0
    dir="${dir}/../"
  done

  fatal "SCM dir not found"
}

function debug() {
  echo "PATH_ARG:${PATH_ARG}"
  echo "DIR:$(__dirname)"
  echo "FILE:$(__filename)"
  echo "FLAT_PATH:$(__clean_path ${PATH_ARG})"
  exit 0
}

function error() {
  echo "Error: $1" > /dev/stderr
  return 1
}

function fatal() {
  echo "Fatal: $1" > /dev/stderr
  exit 1
}

PATH_ARG=$(find_path_in_arguments $@)

for arg in "$@"; do
  case "${arg}" in
    "--absolute")                 __clean_path ${PATH_ARG}                   ;;
    "--basename")                 __filename || error "Path isn't to a file" ;;
    "--debug")                    debug                                     ;;
    "--dirname")                  __dirname                                 ;;
    "--scm-root")                 scm_root $(__dirname)                           ;;
    "--help")                     usage                                     ;;
  esac
done

exit $?
