#!/usr/bin/env bash
. functions.inc

function testSwitches() {
  __run --help
  assertEquals "help exit status"    "0"                         "$status"
  assertEquals "help stdout"         "USAGE:"                    "$(head -n1 ${stdout_file})"

  __run
  assertEquals "no_arguments exit status"    "0"                 "$status"
  assertEquals "no_arguments stdout"         "USAGE:"            "$(head -n1 ${stdout_file})"

  __run /tmp/driller/1/
  assertEquals "no_action exit status"    "0"                    "$status"
  assertEquals "no_action stdout"         "/tmp/driller/1/"      "$stdout"
}

function testDirname() {
  __run --dirname /tmp/driller/1/1/file
  assertEquals "absolute file"            "/tmp/driller/1/1/"         "$stdout"

  __run --dirname /tmp/driller/1/1/
  assertEquals "absolute directory"       "/tmp/driller/1/1/"         "$stdout"
}

function testBasename() {
  __run --basename /tmp/driller/1/1/file
  assertEquals "absolute"         "file"                      "$stdout"

  __run --basename ./test
  assertEquals "relative"         "test"                      "$stdout"
}

function testStdin() {
  echo "/dev/null" | ${driller} --dirname > ${stdout_file}
  assertEquals "dirname"         "/dev/"                      "$(cat $stdout_file)"

  echo "/dev/null" | ${driller} --basename > ${stdout_file}
  assertEquals "basename"         "null"                       "$(cat $stdout_file)"

  echo "~" | ${driller} --absolute > ${stdout_file}
  assertEquals "absolute"         "${HOME}/"                       "$(cat $stdout_file)"
}

function oneTimeSetUp() {
  running_dir=$(pwd)
  driller="${running_dir}/../driller"
  stdout_file="/tmp/driller/stdout"
  stderr_file="/tmp/driller/stderr"
  mkdir -p /tmp/driller/1/1
  touch    /tmp/driller/1/1/file
}

# load and run shUnit2
source ./shunit/src/shunit2

# vim: ai ts=2 sw=2 et sts=2 ft=sh
