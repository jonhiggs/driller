#!/usr/bin/env bash
source $(dirname $0)/functions.inc

function testSwitches() {
  __run --help
  assertEquals "help exit status"    "0"                         "$status"
  assertEquals "help stdout"         "USAGE:"                    "$(head -n1 ${stdout_file})"

  __run --version
  assertEquals "version stdout"         "0"                      "$(cat ${stdout_file} | grep -E '^v[0-9]+\.[0-9]\.[0-9]$' &> /dev/null; echo $?)"

  __run
  assertEquals "no_arguments exit status"    "0"                 "$status"
  assertEquals "no_arguments stdout"         "USAGE:"            "$(head -n1 ${stdout_file})"

  __run ${test_dir}/1/
  assertEquals "no_action exit status"    "0"                    "$status"
  assertEquals "no_action stdout"         "${test_dir}/1/"      "$stdout"
}

function testDirname() {
  __run --dirname ${test_dir}/1/file
  assertEquals "absolute file"            "${test_dir}/1/"         "$stdout"

  ${driller} --dirname ${test_dir}/1/a\ file\ with\ spaces > ${stdout_file}
  assertEquals "absolute file with spaces" "${test_dir}/1/"   "$(cat $stdout_file)"

  __run --dirname ${test_dir}/1/
  assertEquals "absolute directory"       "${test_dir}/1/"         "$stdout"
}

function testBasename() {
  __run --basename ${test_dir}/1/file
  assertEquals "absolute"         "file"                      "$stdout"

  ${driller} --basename ${test_dir}/1/a\ file\ with\ spaces > ${stdout_file}
  assertEquals "absolute with spaces" "a file with spaces"        "$(cat $stdout_file)"

  __run --basename ./test
  assertEquals "relative"         "test"                      "$stdout"
}

function testStdin() {
  echo "/dev/null" | ${driller} --dirname > ${stdout_file}
  assertEquals "dirname"         "/dev/"                      "$(cat $stdout_file)"

  echo "/dev/null" | ${driller} --basename > ${stdout_file}
  assertEquals "basename"         "null"                       "$(cat $stdout_file)"

  echo "~" | ${driller} --absolute > ${stdout_file}
  assertEquals "absolute"         "${HOME}/"                       "$(cat $stdout_file)"
}

# load and run shUnit2
source $(dirname $0)/shunit/src/shunit2

# vim: ai ts=2 sw=2 et sts=2 ft=sh
